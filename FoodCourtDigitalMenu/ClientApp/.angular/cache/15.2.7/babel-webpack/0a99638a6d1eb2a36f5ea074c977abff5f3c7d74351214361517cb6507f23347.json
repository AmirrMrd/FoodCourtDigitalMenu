{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AccountService {\n  constructor(router) {\n    this.router = router;\n    this.loggedIn = false;\n  }\n  isAthenticated() {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(this.loggedIn);\n      }, 100);\n    });\n  }\n  login(user, password) {\n    if (user === 's' && password === '1') {\n      this.loggedIn = true;\n      this.router.navigate(['admin']);\n      return this.loggedIn;\n    } else {\n      this.loggedIn = false;\n      return this.loggedIn;\n    }\n  }\n  register(user, password, mobile) {\n    if (user === null || password === null || mobile === null) {\n      return console.log('registered');\n    } else {\n      return console.log('Not Registered');\n    }\n  }\n}\nAccountService.ɵfac = function AccountService_Factory(t) {\n  return new (t || AccountService)(i0.ɵɵinject(i1.Router));\n};\nAccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountService,\n  factory: AccountService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,cAAc;EAGzBC,YAAqBC,MAAe;IAAf,WAAM,GAANA,MAAM;IADnB,aAAQ,GAAa,KAAK;EACM;EAEjCC,cAAc;IACnB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACrCC,UAAU,CAAC,MAAK;QACdF,OAAO,CAAC,IAAI,CAACG,QAAQ,CAAC;MACxB,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,CAAC;EACJ;EAEOC,KAAK,CAAEC,IAAa,EAAGC,QAAiB;IAC7C,IAAID,IAAI,KAAK,GAAG,IAAIC,QAAQ,KAAK,GAAG,EAAE;MACpC,IAAI,CAACH,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACN,MAAM,CAACU,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,IAAI,CAACJ,QAAQ;KACrB,MACI;MACH,IAAI,CAACA,QAAQ,GAAG,KAAK;MACrB,OAAO,IAAI,CAACA,QAAQ;;EAExB;EAEOK,QAAQ,CAAEH,IAAa,EAAGC,QAAiB,EAAIG,MAAe;IACnE,IAAIJ,IAAI,KAAK,IAAI,IAAKC,QAAQ,KAAK,IAAI,IAAKG,MAAM,KAAK,IAAI,EAAE;MAC3D,OAAOC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;KACjC,MACI;MACH,OAAOD,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;;EAExC;;AAhCWhB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAiB,SAAdjB,cAAc;EAAAkB,YAFb;AAAM","names":["AccountService","constructor","router","isAthenticated","Promise","resolve","reject","setTimeout","loggedIn","login","user","password","navigate","register","mobile","console","log","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\am.alimoradi\\source\\repos\\FoodCourtDigitalMenu\\FoodCourtDigitalMenu\\ClientApp\\src\\app\\Services\\account.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n\r\n  private loggedIn : boolean = false;\r\n  constructor( private router : Router) { }\r\n\r\n  public isAthenticated () {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve(this.loggedIn);\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  public login (user : string , password : string) {\r\n    if (user === 's' && password === '1') {\r\n      this.loggedIn = true;\r\n      this.router.navigate(['admin']);\r\n      return this.loggedIn;\r\n    }\r\n    else {\r\n      this.loggedIn = false;\r\n      return this.loggedIn;\r\n    }\r\n  }\r\n\r\n  public register (user : string , password : string  , mobile : string) {\r\n    if (user === null ||  password === null ||  mobile === null) {\r\n      return console.log('registered'); \r\n    }\r\n    else {\r\n      return console.log('Not Registered');\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}