{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json; charset=utf-8'\n  })\n};\nexport class BranchService {\n  constructor(http, _baseUrl) {\n    this.http = http;\n    this.baseUrl = '';\n    this.baseUrl = _baseUrl;\n  }\n  getAllBranch() {\n    const url = `${this.baseUrl}getallbranches`;\n    return this.http.get(url, httpOptions);\n  }\n  createBranch(data) {\n    const url = `${this.baseUrl}/createbranch`;\n    return this.http.post(url, data);\n  }\n}\nBranchService.ɵfac = function BranchService_Factory(t) {\n  return new (t || BranchService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nBranchService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BranchService,\n  factory: BranchService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,WAAW,QAA2B,sBAAsB;;;AAIjF,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IAAE,cAAc,EAAE;EAAiC,CAAE;CAC/E;AAOD,OAAM,MAAOG,aAAa;EAGxBC,YAAoBC,IAAiB,EAAsBC,QAAgB;IAAvD,SAAI,GAAJD,IAAI;IAFxB,YAAO,GAAG,EAAE;IAGV,IAAI,CAACE,OAAO,GAAGD,QAAQ;EACzB;EAIOE,YAAY;IACjB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACF,OAAO,gBAAgB;IAC3C,OAAO,IAAI,CAACF,IAAI,CAACK,GAAG,CAACD,GAAG,EAACR,WAAW,CAAC;EACvC;EAEOU,YAAY,CAAEC,IAAa;IAChC,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACF,OAAO,eAAe;IAC1C,OAAO,IAAI,CAACF,IAAI,CAACQ,IAAI,CAACJ,GAAG,EAAGG,IAAI,CAAC;EACnC;;AAjBWT,aAAa;mBAAbA,aAAa,0CAGuB,UAAU;AAAA;AAH9CA,aAAa;SAAbA,aAAa;EAAAW,SAAbX,aAAa;EAAAY,YAJZ;AAAM","names":["HttpHeaders","httpOptions","headers","BranchService","constructor","http","_baseUrl","baseUrl","getAllBranch","url","get","createBranch","data","post","factory","providedIn"],"sourceRoot":"","sources":["J:\\WebApplication\\SepidzWebApp\\FoodCourtDigitalMenu\\FoodCourtDigitalMenu\\ClientApp\\src\\app\\Services\\branch.service.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\r\n\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, pipe } from 'rxjs';\r\nimport { branch } from '../Models/BranchModel';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json; charset=utf-8' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class BranchService {\r\n  baseUrl = '';\r\n  \r\n  constructor(private http : HttpClient, @Inject('BASE_URL') _baseUrl: string) {\r\n    this.baseUrl = _baseUrl;\r\n  }\r\n\r\n\r\n\r\n  public getAllBranch () : Observable<any> {\r\n    const url = `${this.baseUrl}getallbranches`;\r\n    return this.http.get(url,httpOptions);\r\n  }\r\n\r\n  public createBranch (data : branch) {\r\n    const url = `${this.baseUrl}/createbranch`;\r\n    return this.http.post(url , data);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}