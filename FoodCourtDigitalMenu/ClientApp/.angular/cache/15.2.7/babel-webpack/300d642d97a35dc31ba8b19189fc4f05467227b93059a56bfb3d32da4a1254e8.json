{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json; charset=utf-8'\n  })\n};\nexport class BranchService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:44340/api/branch';\n  }\n  getAllBranch() {\n    const url = `${this.baseUrl}/getallbranches`;\n    return this.http.get(url, httpOptions);\n  }\n}\nBranchService.ɵfac = function BranchService_Factory(t) {\n  return new (t || BranchService)(i0.ɵɵinject(i1.HttpClient));\n};\nBranchService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BranchService,\n  factory: BranchService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,WAAW,QAA2B,sBAAsB;;;AAIjF,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IAAE,cAAc,EAAE;EAAiC,CAAE;CAC/E;AAOD,OAAM,MAAOG,aAAa;EAIxBC,YAAoBC,IAAiB;IAAjB,SAAI,GAAJA,IAAI;IAHxB,YAAO,GAAG,oCAAoC;EAGL;EAIlCC,YAAY;IAClB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,iBAAiB;IAC5C,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAACF,GAAG,EAACN,WAAW,CAAC;EACtC;;AAXWE,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAO,SAAbP,aAAa;EAAAQ,YAJZ;AAAM","names":["HttpHeaders","httpOptions","headers","BranchService","constructor","http","getAllBranch","url","baseUrl","get","factory","providedIn"],"sourceRoot":"","sources":["J:\\WebApplication\\SepidzWebApp\\FoodCourtDigitalMenu\\FoodCourtDigitalMenu\\ClientApp\\src\\app\\Services\\branch.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, pipe } from 'rxjs';\r\n\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json; charset=utf-8' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class BranchService {\r\n  baseUrl = 'https://localhost:44340/api/branch';\r\n\r\n  \r\n  constructor(private http : HttpClient) { }\r\n\r\n\r\n\r\n  public getAllBranch () : Observable<any> {\r\n   const url = `${this.baseUrl}/getallbranches`;\r\n   return this.http.get(url,httpOptions);\r\n  }\r\n\r\n  //public createBranch (data : branch) {\r\n  //  const url = `${this.baseUrl}/createbranch`;\r\n  //  return this.http.post(url , data);\r\n  //}\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}